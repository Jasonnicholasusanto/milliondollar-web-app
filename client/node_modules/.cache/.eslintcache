[{"/Users/Jason/Desktop/Folders/milliondollar-web-app/client/src/App.js":"1","/Users/Jason/Desktop/Folders/milliondollar-web-app/client/src/components/NavBar/NavBar.jsx":"2","/Users/Jason/Desktop/Folders/milliondollar-web-app/client/src/components/List/List.jsx":"3","/Users/Jason/Desktop/Folders/milliondollar-web-app/client/src/components/Footer2/Footer2.jsx":"4","/Users/Jason/Desktop/Folders/milliondollar-web-app/client/src/pages/DigitalPlanners/DigitalPlanners.jsx":"5","/Users/Jason/Desktop/Folders/milliondollar-web-app/client/src/components/DPList/DPList.jsx":"6","/Users/Jason/Desktop/Folders/milliondollar-web-app/client/src/pages/DigitalPlanner/DigitalPlanner.jsx":"7","/Users/Jason/Desktop/Folders/milliondollar-web-app/client/src/pages/Poster/Poster.jsx":"8","/Users/Jason/Desktop/Folders/milliondollar-web-app/client/src/pages/Login/Signup.jsx":"9","/Users/Jason/Desktop/Folders/milliondollar-web-app/client/src/hooks/postSignup.js":"10","/Users/Jason/Desktop/Folders/milliondollar-web-app/client/src/hooks/useFetch.js":"11","/Users/Jason/Desktop/Folders/milliondollar-web-app/client/src/hooks/useFetchUsers.js":"12","/Users/Jason/Desktop/Folders/milliondollar-web-app/client/src/makeRequestUsers.js":"13","/Users/Jason/Desktop/Folders/milliondollar-web-app/client/src/pages/ForgotPassword/ForgotPassword.jsx":"14","/Users/Jason/Desktop/Folders/milliondollar-web-app/client/src/pages/Login/Login.jsx":"15","/Users/Jason/Desktop/Folders/milliondollar-web-app/client/src/hooks/postForgotPassword.js":"16","/Users/Jason/Desktop/Folders/milliondollar-web-app/client/src/pages/ResetPassword/ResetPassword.jsx":"17"},{"size":3378,"mtime":1680955229510,"results":"18","hashOfConfig":"19"},{"size":3847,"mtime":1680790280330,"results":"20","hashOfConfig":"19"},{"size":1146,"mtime":1680792570880,"results":"21","hashOfConfig":"19"},{"size":2582,"mtime":1680790699575,"results":"22","hashOfConfig":"19"},{"size":2999,"mtime":1680792415051,"results":"23","hashOfConfig":"19"},{"size":1419,"mtime":1680792528141,"results":"24","hashOfConfig":"19"},{"size":5865,"mtime":1680840790099,"results":"25","hashOfConfig":"19"},{"size":7713,"mtime":1680840886656,"results":"26","hashOfConfig":"19"},{"size":7520,"mtime":1680955393884,"results":"27","hashOfConfig":"19"},{"size":1046,"mtime":1680842210854,"results":"28","hashOfConfig":"19"},{"size":691,"mtime":1680842443973,"results":"29","hashOfConfig":"19"},{"size":716,"mtime":1680842564741,"results":"30","hashOfConfig":"19"},{"size":215,"mtime":1680842497079,"results":"31","hashOfConfig":"19"},{"size":4093,"mtime":1680955358029,"results":"32","hashOfConfig":"19"},{"size":4843,"mtime":1680955376106,"results":"33","hashOfConfig":"19"},{"size":617,"mtime":1680940279515,"results":"34","hashOfConfig":"19"},{"size":4677,"mtime":1680955602940,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},"8d06la",{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"54","usedDeprecatedRules":"45"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"45"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"40"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"40"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Jason/Desktop/Folders/milliondollar-web-app/client/src/App.js",["101"],[],"import {\n  createBrowserRouter,\n  RouterProvider,\n  Outlet,\n} from \"react-router-dom\";\n\nimport Home from \"./pages/Home/Home\";\nimport NavBar from \"./components/NavBar/NavBar\";\nimport Footer2 from \"./components/Footer2/Footer2\";\nimport \"./app.scss\";\nimport ShoppingBag from \"./pages/ShoppingBag/ShoppingBag\";\nimport SignUp from \"./pages/Login/Signup\";\nimport Login from \"./pages/Login/Login\";\nimport Checkout from \"./pages/Checkout/Checkout\";\nimport AboutUs from \"./pages/AboutUs/AboutUs\";\nimport ContactUs from \"./pages/ContactUs/ContactUs\";\nimport FAQs from \"./pages/FAQs/FAQs\";\nimport DigitalPlanners from \"./pages/DigitalPlanners/DigitalPlanners\";\nimport DigitalPlanner from \"./pages/DigitalPlanner/DigitalPlanner\";\nimport Poster from \"./pages/Poster/Poster\";\nimport Posters from \"./pages/Posters/Posters\";\nimport ForgotPassword from \"./pages/ForgotPassword/ForgotPassword\";\nimport ResetPassword from \"./pages/ResetPassword/ResetPassword\";\n\n// Customizing the layout of the web page: Navigation bar and Footer stays the same\n// in all pages. However, we utilize Outlet from react-router-dom to change the web pages'\n// properties and objects.\nconst Layout = () => {\n  return (\n    <div className=\"app\">\n      {/* <LaunchingSoon/> */}\n      <NavBar/>\n      <Outlet/>\n      <Footer2/>\n    </div>\n  )\n}\n\nconst Reset = () => {\n  return (\n    <div className=\"resetPasswordPage\">\n      <ResetPassword/>\n    </div>\n  )\n}\n\n// Creating the routes\nconst router = createBrowserRouter([\n  {\n    path:\"/\",\n    element:<Layout/>,\n    children: [\n      // Home page route\n      {\n        path:\"/\",\n        element:<Home/>,\n      },\n      // The About Us page route\n      {\n        path:\"/about-us/\",\n        element:<AboutUs/>,\n      },\n      // The Contact Us page route\n      {\n        path:\"/contact-us/\",\n        element:<ContactUs/>,\n      },\n      // The FAQs page route\n      {\n        path:\"/frequently-asked-questions/\",\n        element:<FAQs/>,\n      },\n      // Posters page route\n      {\n        path:\"/posters/:id\",\n        element:<Posters/>,\n      },\n      // Fetching all posters\n      {\n        path:\"/posters/\",\n        element:<Posters/>,\n      },\n      // Fetching all posters\n      {\n        path:\"/posters/\",\n        element:<Posters/>,\n      },\n      // Product page route\n      {\n        path:\"/poster/:id\",\n        element:<Poster/>,\n      },\n      // Posters page route\n      {\n        path:\"/digital-planners/:id\",\n        element:<DigitalPlanners/>,\n      },\n      // Fetching all posters\n      {\n        path:\"/digital-planners/\",\n        element:<DigitalPlanners/>,\n      },\n      // Product page route\n      {\n        path:\"/digital-planner/:id\",\n        element:<DigitalPlanner/>,\n      },\n      {\n        path:\"/cart/\",\n        element:<ShoppingBag/>,\n      },\n      {\n        path:\"/sign-in/\",\n        element:<Login/>,\n      },\n      {\n        path:\"/sign-up/\",\n        element:<SignUp/>,\n      },\n      {\n        path:\"/forgot-password/\",\n        element:<ForgotPassword/>,\n      },\n      // {\n      //   path:\"/reset-password/\",\n      //   element:<ResetPassword/>,\n      // },\n      {\n        path:\"/cart/checkout/\",\n        element:<Checkout/>\n      }\n    ]\n  },\n\n  {\n    path:\"/reset-password\",\n    element:<ResetPassword/>,\n  }\n\n])\n\nfunction App() {\n  return (\n    <div>\n      <RouterProvider router={router}/>\n    </div>\n  );\n}\n\nexport default App;\n",[],"/Users/Jason/Desktop/Folders/milliondollar-web-app/client/src/components/NavBar/NavBar.jsx",["102","103"],[],"import { React, useState } from 'react'\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport PersonOutlineOutlinedIcon from \"@mui/icons-material/PersonOutlineOutlined\";\nimport FavoriteBorderOutlinedIcon from \"@mui/icons-material/FavoriteBorderOutlined\";\nimport ShoppingCartOutlinedIcon from \"@mui/icons-material/ShoppingCartOutlined\";\nimport {Link} from \"react-router-dom\";\nimport Cart from '../Cart/Cart';\nimport \"./NavBar.scss\";\n\nconst NavBar = () => {\n\n    const [open, setOpen] = useState(false);\n\n  return (\n    <div className='navbar'>\n        <div className=\"wrapper\">\n\n            <div className=\"left2\">\n                <Link className='millionDollarPostersLink' to=\"/\">MillionDollarPosters</Link>\n            </div>\n\n            <div className=\"right\">\n\n                <div className=\"dropdownItem\">\n                    <Link className='dropbtn' to=\"/digital-planners/\">Digital Planners</Link>\n\n                    <div class=\"dropdown-content\">\n                        <a href=\"/digital-planners/1\">Daily Planners</a>\n                        <a href=\"/digital-planners/2\">Monthly Planners</a>\n                        <a href=\"/digital-planners/3\">Yearly Planners</a>\n                        <a href=\"/digital-planners/4\">Habit Trackers</a>\n                        <a href=\"/digital-planners/5\">Others</a>\n                    </div>\n                </div>\n\n                <div className=\"dropdownItem\">\n                    <Link className='dropbtn' to=\"/posters/\">Posters</Link>\n\n                    <div class=\"dropdown-content\">\n                        <a href=\"/posters/1\">Classic Matte Paper</a>\n                        <a href=\"/posters/2\">Premium Matte Paper</a>\n                        <a href=\"/posters/3\">Classic Semi-Glossy Paper</a>\n                        <a href=\"/posters/4\">Premium Semi-Glossy Paper</a>\n                        <a href=\"/posters/5\">Aluminium Prints</a>\n                    </div>\n                </div>\n\n                <div className=\"item\">\n                    <Link className='link' to=\"/sign-in/\">Sell</Link>\n                </div>\n\n                {/* <div className=\"item\">\n                    <Link className='link' to=\"/\">Homepage</Link>\n                </div> */}\n\n                <div className=\"item\">\n                    <Link className='link' to=\"/about-us/\">About</Link>\n                </div>\n\n                <div className=\"item\">\n                    <Link className='link' to=\"/contact-us/\">Contact</Link>\n                </div>\n                \n                <div className=\"icons\">\n\n                    <div className='searchIcon'>\n                        <Link className=\"link\" to=\"/\">\n                            <SearchIcon/>\n                        </Link>\n                    </div>\n\n                    <div className='signInIcon'>\n                        <Link className=\"link\" to=\"/sign-in\">\n                            <PersonOutlineOutlinedIcon/>\n                        </Link>\n                    </div>\n                    \n                    <div className=\"favouriteIcon\">\n                        <FavoriteBorderOutlinedIcon className='favIcon'/>\n                    </div>\n                    \n                    {/* <div className=\"cartIcon\" onClick={changeVisibility}>\n                        <ShoppingCartOutlinedIcon/>\n                        <span>0</span>\n                    </div> */}\n\n                    <div className=\"cartIcon\">\n                        <Link className=\"link\" to=\"/cart\">\n                            <ShoppingCartOutlinedIcon/>\n                            <span>0</span>\n                        </Link>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        {open && <Cart/>}\n    </div>\n  )\n}\n\nexport default NavBar",[],"/Users/Jason/Desktop/Folders/milliondollar-web-app/client/src/components/List/List.jsx",["104"],[],"import React, { useState } from 'react';\nimport \"./List.scss\";\nimport Card from \"../Card/Card.jsx\";\nimport useFetch from '../../hooks/useFetch';\n\nconst List = ({ subCats, maxPrice, sort, categoryId }) => {\n\n    let query = `/posters?populate=*`;\n\n    console.log(subCats);\n    \n    if (categoryId) {\n        query += `&[filters][poster_materials][id]=${categoryId}${subCats.map(\n            (item) => `&[filters][sub_categories][id][$eq]=${item}`\n        )}&[filters][price][$lte]=${maxPrice}`;\n    } else {\n        query += `&${categoryId}${subCats.map(\n            (item) => `&[filters][sub_categories][id][$eq]=${item}`\n        )}&[filters][price][$lte]=${maxPrice}`;\n    }\n\n\n    if (sort !== null) {\n        query += `&sort=price:${sort}`;\n    }\n\n    const { data, loading, error } = useFetch(\n        query\n    );\n\n    return (\n        <div className=\"list\">\n            {error ? \"Oops! Something went wrong.\" : \n            (loading ? \"loading...\" : \n            (data?.length !== 0 ? (data?.map((item) => <Card item={item} key={item.id}/>)) :\n                \"No items found.\"\n            ))} \n        </div>\n    )\n}\n\nexport default List; ",[],"/Users/Jason/Desktop/Folders/milliondollar-web-app/client/src/components/Footer2/Footer2.jsx",["105","106","107","108"],[],"import React from 'react';\nimport './Footer2.scss';\nimport { Link } from 'react-router-dom';\nimport FacebookIcon from \"@mui/icons-material/Facebook\";\nimport InstagramIcon from '@mui/icons-material/Instagram';\nimport TwitterIcon from '@mui/icons-material/Twitter';\nimport GoogleIcon from '@mui/icons-material/Google';\n\nconst Footer2 = () => {\n  return (\n    <div className=\"footer2\">\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"footer-col\">\n                    <h4>About</h4>\n                    <ul>\n                        <li><a href=\"/about-us/\">About Us</a></li>\n                        <li><a href=\"/contact-us/\">Contact Us</a></li>\n                        <li><a href=\"/sign-in/\">Sell My Designs</a></li>\n                        <li><a href=\"/\">Privacy Policy</a></li>\n                    </ul>\n                </div>\n\n                <div className=\"footer-col\">\n                    <h4>Help</h4>\n                    <ul>\n                        <li><a href=\"/frequently-asked-questions/\">FAQs</a></li>\n                        <li><a href=\"/shipping-information/\">Shipping</a></li>\n                        <li><a href=\"/returns-policy/\">Returns</a></li>\n                        <li><a href=\"/order-status/\">Order Status</a></li>\n                        <li><a href=\"/payment-options/\">Payment Options</a></li>\n                    </ul>\n                </div>\n\n                <div className=\"footer-col\">\n                    <h4>Shop</h4>\n                    <ul>\n                        <li><a href=\"/posters/\">Posters</a></li>\n                        <li><a href=\"/digital-planners/\">Digital Planners</a></li>\n                        {/* <li><a href=\"\"></a></li> */}\n\n                    </ul>\n                </div>\n\n                <div className=\"footer-col\">\n                    <h4>Follow Us</h4>\n                    \n                    <div className=\"social-links\">\n                        <a target=\"_blank\" href=\"https://www.instagram.com/milliondollarposters/\"><InstagramIcon/></a>\n                        <a href=\"\"><FacebookIcon/></a>\n                        <a href=\"\"><TwitterIcon/></a>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"copyright\">\n\n                <Link className='link' to=\"/\">\n                    <h1>MillionDollarPosters</h1>\n                </Link>\n\n                <span>\n                    © Copyright 2023. All Rights Reserved\n                </span>\n            </div>\n        </div>\n    </div>\n  )\n}\n\nexport default Footer2","/Users/Jason/Desktop/Folders/milliondollar-web-app/client/src/pages/DigitalPlanners/DigitalPlanners.jsx",["109","110"],[],"import React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Contact from '../../components/Contact/Contact';\nimport \"./DigitalPlanners.scss\";\nimport useFetch from '../../hooks/useFetch';\nimport DPHeadline from '../../components/DPHeadline/DPHeadline';\nimport DPList from '../../components/DPList/DPList';\n\nconst DigitalPlanners = () => {\n\n  // categoryId includes our string object id due to the react-router-dom\n  const categoryId = parseInt(useParams().id);\n  const [maxPrice, setMaxPrice] = useState(500);\n  const [sort, setSort] = useState(null);\n  const [selectedSubCats, setSelectedSubCats] = useState([]);\n\n\n  const { data, loading, error } = useFetch(\n    categoryId ? `/digital-planner-subcategories?filters[digital_planner_categories][id][$eq]=${categoryId}` : \"/digital-planner-subcategories\"\n  );\n  \n  const handleChange = (e) => {\n    const value = e.target.value;\n    const isChecked = e.target.checked;\n\n    setSelectedSubCats(\n      isChecked \n        ? [...selectedSubCats, value] \n        : selectedSubCats.filter((item) => item !== value)\n    );\n  };\n\n  return (\n\n    <div className=\"productsContainer\">\n      <div className=\"products\">\n        <div className=\"left\">\n\n          <div className=\"filterItem\">\n            <h2>Poster Categories</h2>\n\n            {data?.map((item) => (\n              <div className=\"inputItem\" key={item.id}>\n                <input type=\"checkbox\" id={item.id} value={item.id} onChange={handleChange}/>\n                <label htmlFor={item.id}>{item.attributes.title}</label>\n              </div>\n            ))}\n          </div>\n\n          <div className=\"filterItem\">\n            <h2>Filter by price</h2>\n            <div className=\"inputItem\">\n              <span>$1</span>\n              <input type=\"range\" min={1} max={500} onChange={(e) => setMaxPrice(e.target.value)}/>\n              <span>${maxPrice}</span>\n            </div>\n          </div>\n          \n          <div className=\"filterItem\">\n            <h2>Sort by</h2>\n            <div className=\"inputItem\">\n              <input type=\"radio\" id=\"asc\" value=\"asc\" name=\"price\" onChange={(e) => setSort(\"asc\")}/>\n              <label htmlFor=\"asc\">Price (Lowest first)</label>\n            </div>\n\n            <div className=\"inputItem\">\n              <input type=\"radio\" id=\"desc\" value=\"desc\" name=\"price\" onChange={(e) => setSort(\"desc\")}/>\n              <label htmlFor=\"desc\">Price (Highest first)</label>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"right\">\n          {/* <img \n            className='categoryImg' \n            src=\"https://images.pexels.com/photos/310435/pexels-photo-310435.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2\" \n            alt=\"\"\n          /> */}\n\n          <DPHeadline id={categoryId}/>\n\n          <DPList categoryId={categoryId} maxPrice={maxPrice} sort={sort} subCats={selectedSubCats} />\n        </div>\n      </div>\n\n      <Contact/>\n    </div>\n  )\n}\n\nexport default DigitalPlanners;","/Users/Jason/Desktop/Folders/milliondollar-web-app/client/src/components/DPList/DPList.jsx",["111"],[],"import React, { useState } from 'react';\nimport \"./DPList.scss\";\nimport useFetch from '../../hooks/useFetch';\nimport DPCard from '../DPCard/DPCard';\n\nconst DPList = ({ subCats, maxPrice, sort, categoryId }) => {\n\n    // let query = `/posters?populate=*&[filters][poster_materials][id]=${categoryId}${subCats.map(\n    //     (item) => `&[filters][sub_categories][id][$eq]=${item}`\n    // )}&[filters][price][$lte]=${maxPrice}`\n\n    let query = `/digital-planners?populate=*`;\n\n    console.log(subCats);\n    \n    if (categoryId) {\n        query += `&[filters][digital_planner_categories][id]=${categoryId}${subCats.map(\n            (item) => `&[filters][digital_planner_subcategories][id][$eq]=${item}`\n        )}&[filters][price][$lte]=${maxPrice}`;\n    } else {\n        query += `&${categoryId}${subCats.map(\n            (item) => `&[filters][digital_planner_subcategories][id][$eq]=${item}`\n        )}&[filters][price][$lte]=${maxPrice}`;\n    }\n\n\n    if (sort !== null) {\n        query += `&sort=price:${sort}`;\n    }\n\n    const { data, loading, error } = useFetch(\n        query\n    );\n\n    return (\n        <div className=\"list\">\n            {error ? \"Oops! Something went wrong.\" : \n            (loading ? \"loading...\" : \n            (data?.length !== 0 ? (data?.map((item) => <DPCard item={item} key={item.id}/>)) :\n                \"No items found.\"\n            ))} \n        </div>\n    )\n}\n\nexport default DPList; ","/Users/Jason/Desktop/Folders/milliondollar-web-app/client/src/pages/DigitalPlanner/DigitalPlanner.jsx",["112","113","114","115","116","117","118"],[],"/Users/Jason/Desktop/Folders/milliondollar-web-app/client/src/pages/Poster/Poster.jsx",["119","120","121","122","123"],[],"/Users/Jason/Desktop/Folders/milliondollar-web-app/client/src/pages/Login/Signup.jsx",["124"],[],"import React, { useState } from 'react';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Link from '@mui/material/Link';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport Contact from '../../components/Contact/Contact';\nimport './Signup.scss';\nimport bcrypt from 'bcryptjs';\nimport { postSignup } from '../../hooks/postSignup.js';\n\nfunction Copyright(props) {\n  return (\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://mui.com/\">\n        MillionDollarPosters\n      </Link>{' '}\n      {/* {new Date().getFullYear()} */}\n      2023\n      {'.'}\n    </Typography>\n  );\n}\n\nconst theme = createTheme({\n    palette: {\n        primary: {\n        main: '#000000',\n        darker: '#000000',\n        },\n        secondary: {\n        main: '#ffffff',\n        },\n    },\n});\n\nexport default function SignUp() {\n\n  // const { data, loading, error } = useFetchUsers(\n  //   \"/users?populate=*\"\n  // );\n\n  // console.log(data);\n\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [updates, setUpdates] = useState(false);\n  const [password, setPassword] = useState('');\n  const [submitted, setSubmitted] = useState(false);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    \n    const data = new FormData(event.currentTarget);\n\n    const saltRounds = 10;\n    const password = data.get('password');\n    const hashedPassword = bcrypt.hashSync(password, saltRounds);\n    let consent = '';\n\n    if(updates){\n      consent = 'yes';\n    } else {\n      consent = 'no';\n    }\n\n    await postSignup(firstName, lastName, username, email, password, consent);\n\n    setFirstName('');\n    setLastName('');\n    setUsername('');\n    setEmail('');\n    setPassword('');\n\n    setSubmitted(true);\n  };\n\n  // Before posting the username to the back-end, we must also check if the username is available.\n  // After a user signs up, we must verify their email address.\n\n  return (\n    <div className=\"loginContainer\">\n        <ThemeProvider theme={theme}>\n        <Grid container component=\"main\" sx={{ height: '100vh' }}>\n            <CssBaseline />\n            <Grid\n            item\n            xs={false}\n            sm={4}\n            md={7}\n            sx={{\n                backgroundImage: 'url(https://source.unsplash.com/random)',\n                backgroundRepeat: 'no-repeat',\n                backgroundColor: (t) =>\n                t.palette.mode === 'light' ? t.palette.grey[50] : t.palette.grey[900],\n                backgroundSize: 'cover',\n                backgroundPosition: 'center',\n            }}\n            />\n            <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n            <Box\n                sx={{\n                my: 8,\n                mx: 4,\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n                }}\n            >\n\n                <img style={{width: \"50px\", marginBottom: \"30px\"}} src=\"favicon.ico\" alt=\"logo\"/>\n\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign up\n                </Typography>\n                \n                <br/>\n                {submitted && <p style={{fontSize: \"10px\"}}>Thank you for joining us! Please verify your email.</p>}\n\n                <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 1 }}>\n                <Grid container spacing={2}>\n                   <Grid item xs={12} sm={6}>\n                     <TextField\n                      margin=\"normal\"\n                      autoComplete=\"given-name\"\n                      name=\"firstName\"\n                      required\n                      fullWidth\n                      id=\"firstName\"\n                      label=\"First Name\"\n                      autoFocus\n                      value={firstName}\n                      onChange={e => setFirstName(e.target.value)}\n                    />\n                  </Grid>\n\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      margin=\"normal\"\n                      required\n                      fullWidth\n                      id=\"lastName\"\n                      label=\"Last Name\"\n                      name=\"lastName\"\n                      autoComplete=\"family-name\"\n                      value={lastName}\n                      onChange={e => setLastName(e.target.value)}\n                    />\n                  </Grid>\n                </Grid>\n\n                  <TextField\n                      margin=\"normal\"\n                      name=\"username\"\n                      required\n                      fullWidth\n                      id=\"username\"\n                      label=\"Username\"\n                      autoFocus\n                      value={username}\n                      onChange={e => setUsername(e.target.value)}\n                    />\n\n                  <TextField\n                      margin=\"normal\"\n                      required\n                      fullWidth\n                      id=\"email\"\n                      label=\"Email Address\"\n                      name=\"email\"\n                      autoComplete=\"email\"\n                      autoFocus\n                      value={email}\n                      onChange={e => setEmail(e.target.value)}\n                  />\n\n                  <TextField\n                      margin=\"normal\"\n                      required\n                      fullWidth\n                      name=\"password\"\n                      label=\"Password\"\n                      type=\"password\"\n                      id=\"password\"\n                      autoComplete=\"current-password\"\n                      value={password}\n                      onChange={e => setPassword(e.target.value)}\n                  />\n                  <FormControlLabel\n                      name=\"updates\"\n                      id=\"updates\"\n                      control={<Checkbox value=\"remember\" color=\"primary\" />}\n                      label=\"I would like to receive updates via email.\"\n                      value={updates}\n                      onChange={() => setUpdates(!updates)}\n                  />\n\n                  <Button\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                      sx={{ mt: 3, mb: 2 }}\n                      color={theme.darker}\n                  >\n                      SIGN UP\n                  </Button>\n\n                  <Grid container>\n                      <Grid item>\n                      <Link href=\"/sign-in\" variant=\"body2\">\n                          {\"Already have an account? Sign in\"}\n                      </Link>\n                      </Grid>\n                  </Grid>\n                  <Copyright sx={{ mt: 5 }} />\n                </Box>\n            </Box>\n            </Grid>\n        </Grid>\n\n        </ThemeProvider>\n\n        <Contact className=\"contactContainer\"/>\n    </div>\n\n  );\n}","/Users/Jason/Desktop/Folders/milliondollar-web-app/client/src/hooks/postSignup.js",["125"],[],"import axios from \"axios\";\n\nexport const postSignup = async (firstName, lastName, username, email, hashedPassword, updates) => {\n    try {\n      const response = await axios.post(\n        process.env.REACT_APP_API_URL + \"/auth/local/register\", \n        {\n            username: username,\n            email: email,\n            password: hashedPassword,\n            firstName: firstName,\n            lastName: lastName,\n            updates: updates===\"yes\" ? true : false,\n            blocked: false,\n            confirmed: false,\n            // role: process.env.REACT_APP_DEFAULT_ROLE,\n        },\n        {\n          baseURL: process.env.REACT_APP_API_URL,\n          headers: {\n              Authorization: \"bearer \" + process.env.REACT_APP_API_TOKEN,\n          },\n        }).then(response => {\n          // Handle success.\n          console.log('Well done!');\n          console.log('User profile', response.data.user);\n          console.log('User token', response.data.jwt);\n        })\n    } catch (error) {\n      console.error(error);\n    }\n  };",[],"/Users/Jason/Desktop/Folders/milliondollar-web-app/client/src/hooks/useFetch.js",[],[],"/Users/Jason/Desktop/Folders/milliondollar-web-app/client/src/hooks/useFetchUsers.js",[],[],"/Users/Jason/Desktop/Folders/milliondollar-web-app/client/src/makeRequestUsers.js",[],[],"/Users/Jason/Desktop/Folders/milliondollar-web-app/client/src/pages/ForgotPassword/ForgotPassword.jsx",["126","127"],[],"import * as React from 'react';\nimport { useState } from 'react';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Link from '@mui/material/Link';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport Contact from '../../components/Contact/Contact';\nimport './ForgotPassword.scss';\nimport { postForgotPassword } from '../../hooks/postForgotPassword';\n\nfunction Copyright(props) {\n  return (\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://mui.com/\">\n        MillionDollarPosters\n      </Link>{' '}\n      {/* {new Date().getFullYear()} */}\n      2023\n      {'.'}\n    </Typography>\n  );\n}\n\nconst theme = createTheme({\n    palette: {\n        primary: {\n        main: '#000000',\n        darker: '#000000',\n        },\n        secondary: {\n        main: '#ffffff',\n        },\n    },\n});\n\nexport default function ForgotPassword() {\n\n    const [submitted, setSubmitted] = useState(false);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    const email = data.get('email');\n\n    await postForgotPassword(email);\n  };\n\n  return (\n    <div className=\"loginContainer\">\n        <ThemeProvider theme={theme}>\n        <Grid container component=\"main\" sx={{ height: '100vh' }}>\n            <CssBaseline />\n            \n            <Grid\n            item\n            xs={false}\n            sm={4}\n            md={7}\n            sx={{\n                backgroundImage: 'url(https://source.unsplash.com/random)',\n                backgroundRepeat: 'no-repeat',\n                backgroundColor: (t) =>\n                t.palette.mode === 'light' ? t.palette.grey[50] : t.palette.grey[900],\n                backgroundSize: 'cover',\n                backgroundPosition: 'center',\n            }}\n            />\n\n            <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n                <Box\n                    sx={{\n                    my: 8,\n                    mx: 4,\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                    }}\n                >\n           \n                    <img style={{width: \"50px\", marginBottom: \"30px\"}} src=\"favicon.ico\" alt=\"logo\"/>\n\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Forgot Password?\n                    </Typography>\n\n                    <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 1 }}>\n\n                    <TextField\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"email\"\n                        label=\"Email Address\"\n                        name=\"email\"\n                        autoComplete=\"email\"\n                        autoFocus\n                        sx={{ width: '100%' }}\n                    />\n\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        sx={{ mt: 3, mb: 2 }}\n                        color={theme.darker}\n                    >\n                        Reset Password\n                    </Button>\n\n                    <Grid container>\n                        <Grid item>\n                        <Link href=\"/sign-in\" variant=\"body2\">\n                            {\"Remember your password?\"}\n                        </Link>\n                        </Grid>\n                    </Grid>\n                    <Copyright sx={{ mt: 5 }} />\n                    </Box>\n                </Box>\n            </Grid>\n        </Grid>\n        </ThemeProvider>\n\n        <Contact className=\"contactContainer\"/>\n    </div>\n\n  );\n}","/Users/Jason/Desktop/Folders/milliondollar-web-app/client/src/pages/Login/Login.jsx",["128","129"],[],"import * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Link from '@mui/material/Link';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport Contact from '../../components/Contact/Contact';\nimport './Login.scss';\n\nfunction Copyright(props) {\n  return (\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://mui.com/\">\n        MillionDollarPosters\n      </Link>{' '}\n      {/* {new Date().getFullYear()} */}\n      2023\n      {'.'}\n    </Typography>\n  );\n}\n\nconst theme = createTheme({\n    palette: {\n        primary: {\n        main: '#000000',\n        darker: '#000000',\n        },\n        secondary: {\n        main: '#ffffff',\n        },\n    },\n});\n\nexport default function SignIn() {\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    console.log({\n      email: data.get('email'),\n      password: data.get('password'),\n    });\n  };\n\n  return (\n    <div className=\"loginContainer\">\n        <ThemeProvider theme={theme}>\n        <Grid container component=\"main\" sx={{ height: '100vh' }}>\n            <CssBaseline />\n            <Grid\n            item\n            xs={false}\n            sm={4}\n            md={7}\n            sx={{\n                backgroundImage: 'url(https://source.unsplash.com/random)',\n                backgroundRepeat: 'no-repeat',\n                backgroundColor: (t) =>\n                t.palette.mode === 'light' ? t.palette.grey[50] : t.palette.grey[900],\n                backgroundSize: 'cover',\n                backgroundPosition: 'center',\n            }}\n            />\n            <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n            <Box\n                sx={{\n                my: 8,\n                mx: 4,\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n                }}\n            >\n                {/* <Avatar sx={{ m: 1, bgcolor: 'black' }}>\n                    <LockOutlinedIcon />\n                </Avatar> */}\n\n                <img style={{width: \"50px\", marginBottom: \"30px\"}} src=\"favicon.ico\" alt=\"logo\"/>\n\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign in\n                </Typography>\n                <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 1 }}>\n                <TextField\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    id=\"email\"\n                    label=\"Email Address\"\n                    name=\"email\"\n                    autoComplete=\"email\"\n                    autoFocus\n                />\n                <TextField\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    name=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    id=\"password\"\n                    autoComplete=\"current-password\"\n                />\n                <FormControlLabel\n                    control={<Checkbox value=\"remember\" color=\"primary\" />}\n                    label=\"Remember me\"\n                />\n\n                <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    sx={{ mt: 3, mb: 2 }}\n                    color={theme.darker}\n                >\n                    Sign In\n                </Button>\n\n                {/* <button className=\"loginButton\">\n                    SIGN IN\n                </button> */}\n\n                <Grid container>\n                    <Grid item xs>\n                    <Link href=\"/forgot-password\" variant=\"body2\">\n                        Forgot password?\n                    </Link>\n                    </Grid>\n                    <Grid item>\n                    <Link href=\"/sign-up\" variant=\"body2\">\n                        {\"Don't have an account? Sign Up\"}\n                    </Link>\n                    </Grid>\n                </Grid>\n                <Copyright sx={{ mt: 5 }} />\n                </Box>\n            </Box>\n            </Grid>\n        </Grid>\n        </ThemeProvider>\n\n        <Contact className=\"contactContainer\"/>\n    </div>\n\n  );\n}","/Users/Jason/Desktop/Folders/milliondollar-web-app/client/src/hooks/postForgotPassword.js",["130"],[],"/Users/Jason/Desktop/Folders/milliondollar-web-app/client/src/pages/ResetPassword/ResetPassword.jsx",[],[],{"ruleId":"131","severity":1,"message":"132","line":39,"column":7,"nodeType":"133","messageId":"134","endLine":39,"endColumn":12},{"ruleId":"131","severity":1,"message":"135","line":2,"column":8,"nodeType":"133","messageId":"134","endLine":2,"endColumn":29},{"ruleId":"131","severity":1,"message":"136","line":13,"column":18,"nodeType":"133","messageId":"134","endLine":13,"endColumn":25},{"ruleId":"131","severity":1,"message":"137","line":1,"column":17,"nodeType":"133","messageId":"134","endLine":1,"endColumn":25},{"ruleId":"131","severity":1,"message":"138","line":7,"column":8,"nodeType":"133","messageId":"134","endLine":7,"endColumn":18},{"ruleId":"139","severity":1,"message":"140","line":49,"column":25,"nodeType":"141","messageId":"142","endLine":49,"endColumn":99,"fix":"143"},{"ruleId":"144","severity":1,"message":"145","line":50,"column":25,"nodeType":"141","endLine":50,"endColumn":36},{"ruleId":"144","severity":1,"message":"145","line":51,"column":25,"nodeType":"141","endLine":51,"endColumn":36},{"ruleId":"131","severity":1,"message":"146","line":18,"column":17,"nodeType":"133","messageId":"134","endLine":18,"endColumn":24},{"ruleId":"131","severity":1,"message":"147","line":18,"column":26,"nodeType":"133","messageId":"134","endLine":18,"endColumn":31},{"ruleId":"131","severity":1,"message":"137","line":1,"column":17,"nodeType":"133","messageId":"134","endLine":1,"endColumn":25},{"ruleId":"131","severity":1,"message":"148","line":9,"column":8,"nodeType":"133","messageId":"134","endLine":9,"endColumn":22},{"ruleId":"131","severity":1,"message":"149","line":15,"column":7,"nodeType":"133","messageId":"134","endLine":15,"endColumn":12},{"ruleId":"131","severity":1,"message":"147","line":30,"column":26,"nodeType":"133","messageId":"134","endLine":30,"endColumn":31},{"ruleId":"150","severity":1,"message":"151","line":33,"column":3,"nodeType":"152","messageId":"153","endLine":41,"endColumn":4},{"ruleId":"131","severity":1,"message":"154","line":63,"column":10,"nodeType":"133","messageId":"134","endLine":63,"endColumn":17},{"ruleId":"131","severity":1,"message":"155","line":63,"column":19,"nodeType":"133","messageId":"134","endLine":63,"endColumn":29},{"ruleId":"156","severity":1,"message":"157","line":88,"column":21,"nodeType":"141","endLine":93,"endColumn":23},{"ruleId":"131","severity":1,"message":"149","line":15,"column":7,"nodeType":"133","messageId":"134","endLine":15,"endColumn":12},{"ruleId":"131","severity":1,"message":"147","line":30,"column":26,"nodeType":"133","messageId":"134","endLine":30,"endColumn":31},{"ruleId":"150","severity":1,"message":"151","line":33,"column":3,"nodeType":"152","messageId":"153","endLine":41,"endColumn":4},{"ruleId":"131","severity":1,"message":"154","line":92,"column":10,"nodeType":"133","messageId":"134","endLine":92,"endColumn":17},{"ruleId":"131","severity":1,"message":"155","line":92,"column":19,"nodeType":"133","messageId":"134","endLine":92,"endColumn":29},{"ruleId":"131","severity":1,"message":"158","line":67,"column":11,"nodeType":"133","messageId":"134","endLine":67,"endColumn":25},{"ruleId":"131","severity":1,"message":"159","line":5,"column":13,"nodeType":"133","messageId":"134","endLine":5,"endColumn":21},{"ruleId":"131","severity":1,"message":"160","line":44,"column":12,"nodeType":"133","messageId":"134","endLine":44,"endColumn":21},{"ruleId":"131","severity":1,"message":"161","line":44,"column":23,"nodeType":"133","messageId":"134","endLine":44,"endColumn":35},{"ruleId":"131","severity":1,"message":"162","line":2,"column":8,"nodeType":"133","messageId":"134","endLine":2,"endColumn":14},{"ruleId":"131","severity":1,"message":"163","line":12,"column":8,"nodeType":"133","messageId":"134","endLine":12,"endColumn":24},{"ruleId":"131","severity":1,"message":"159","line":5,"column":13,"nodeType":"133","messageId":"134","endLine":5,"endColumn":21},"no-unused-vars","'Reset' is assigned a value but never used.","Identifier","unusedVar","'KeyboardArrowDownIcon' is defined but never used.","'setOpen' is assigned a value but never used.","'useState' is defined but never used.","'GoogleIcon' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"164","text":"165"},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'StraightenIcon' is defined but never used.","'theme' is assigned a value but never used.","no-extend-native","Date prototype is read only, properties should not be added.","AssignmentExpression","unexpected","'compare' is assigned a value but never used.","'setCompare' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'hashedPassword' is assigned a value but never used.","'response' is assigned a value but never used.","'submitted' is assigned a value but never used.","'setSubmitted' is assigned a value but never used.","'Avatar' is defined but never used.","'LockOutlinedIcon' is defined but never used.",[2038,2038]," rel=\"noreferrer\""]