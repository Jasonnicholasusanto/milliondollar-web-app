{"ast":null,"code":"var _jsxFileName = \"/Users/Jason/Desktop/Folders/milliondollar-web-app/client/src/pages/ResetPassword/ResetPassword.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from '@mui/material/styles';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  container: {\n    height: '100vh',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center'\n  },\n  logo: {\n    marginBottom: theme.spacing(4)\n  },\n  form: {\n    margin: '0 auto',\n    maxWidth: '400px',\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  submitButton: {\n    margin: theme.spacing(2, 0)\n  },\n  progress: {\n    margin: theme.spacing(2, 0)\n  }\n}));\n\nconst ResetPassword = () => {\n  _s();\n\n  const classes = useStyles();\n  const [email, setEmail] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setLoading(true); // Add code to handle reset password request here\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      className: classes.logo,\n      align: \"center\",\n      children: \"Logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Email\",\n        variant: \"outlined\",\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        type: \"email\",\n        autoFocus: true,\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        fullWidth: true,\n        disabled: loading,\n        className: classes.submitButton,\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(CircularProgress, {\n        className: classes.progress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(Box, {\n        mt: 2,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        justify: \"flex-end\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/login\",\n            variant: \"body2\",\n            children: \"Return to login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ResetPassword, \"eA9dfi7Ca3LYQ378bwg78JxUdwE=\", false, function () {\n  return [useStyles];\n});\n\n_c = ResetPassword;\nexport default ResetPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"sources":["/Users/Jason/Desktop/Folders/milliondollar-web-app/client/src/pages/ResetPassword/ResetPassword.jsx"],"names":["React","useState","Link","makeStyles","Container","Typography","TextField","Button","Grid","Box","CircularProgress","useStyles","theme","container","height","display","flexDirection","justifyContent","logo","marginBottom","spacing","form","margin","maxWidth","width","alignItems","submitButton","progress","ResetPassword","classes","email","setEmail","loading","setLoading","error","setError","handleSubmit","e","preventDefault","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,UAAT,QAA2B,sBAA3B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;;AAEA,MAAMC,SAAS,GAAGR,UAAU,CAAES,KAAD,KAAY;AACvCC,EAAAA,SAAS,EAAE;AACTC,IAAAA,MAAM,EAAE,OADC;AAETC,IAAAA,OAAO,EAAE,MAFA;AAGTC,IAAAA,aAAa,EAAE,QAHN;AAITC,IAAAA,cAAc,EAAE;AAJP,GAD4B;AAOvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,YAAY,EAAEP,KAAK,CAACQ,OAAN,CAAc,CAAd;AADV,GAPiC;AAUvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,MAAM,EAAE,QADJ;AAEJC,IAAAA,QAAQ,EAAE,OAFN;AAGJC,IAAAA,KAAK,EAAE,MAHH;AAIJT,IAAAA,OAAO,EAAE,MAJL;AAKJC,IAAAA,aAAa,EAAE,QALX;AAMJS,IAAAA,UAAU,EAAE;AANR,GAViC;AAkBvCC,EAAAA,YAAY,EAAE;AACZJ,IAAAA,MAAM,EAAEV,KAAK,CAACQ,OAAN,CAAc,CAAd,EAAiB,CAAjB;AADI,GAlByB;AAqBvCO,EAAAA,QAAQ,EAAE;AACRL,IAAAA,MAAM,EAAEV,KAAK,CAACQ,OAAN,CAAc,CAAd,EAAiB,CAAjB;AADA;AArB6B,CAAZ,CAAD,CAA5B;;AA0BA,MAAMQ,aAAa,GAAG,MAAM;AAAA;;AAC1B,QAAMC,OAAO,GAAGlB,SAAS,EAAzB;AACA,QAAM,CAACmB,KAAD,EAAQC,QAAR,IAAoB9B,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAC+B,OAAD,EAAUC,UAAV,IAAwBhC,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACiC,KAAD,EAAQC,QAAR,IAAoBlC,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMmC,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACAL,IAAAA,UAAU,CAAC,IAAD,CAAV,CAF0B,CAG1B;AACD,GAJD;;AAMA,sBACE,QAAC,SAAD;AAAW,IAAA,QAAQ,EAAC,IAApB;AAAyB,IAAA,SAAS,EAAEJ,OAAO,CAAChB,SAA5C;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAyB,MAAA,SAAS,EAAEgB,OAAO,CAACX,IAA5C;AAAkD,MAAA,KAAK,EAAC,QAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAM,MAAA,SAAS,EAAEW,OAAO,CAACR,IAAzB;AAA+B,MAAA,QAAQ,EAAEe,YAAzC;AAAA,8BACE,QAAC,SAAD;AACE,QAAA,KAAK,EAAC,OADR;AAEE,QAAA,OAAO,EAAC,UAFV;AAGE,QAAA,MAAM,EAAC,QAHT;AAIE,QAAA,QAAQ,MAJV;AAKE,QAAA,SAAS,MALX;AAME,QAAA,IAAI,EAAC,OANP;AAOE,QAAA,SAAS,MAPX;AAQE,QAAA,KAAK,EAAEN,KART;AASE,QAAA,QAAQ,EAAGO,CAAD,IAAON,QAAQ,CAACM,CAAC,CAACE,MAAF,CAASC,KAAV;AAT3B;AAAA;AAAA;AAAA;AAAA,cADF,eAYE,QAAC,MAAD;AACE,QAAA,OAAO,EAAC,WADV;AAEE,QAAA,KAAK,EAAC,SAFR;AAGE,QAAA,IAAI,EAAC,QAHP;AAIE,QAAA,SAAS,MAJX;AAKE,QAAA,QAAQ,EAAER,OALZ;AAME,QAAA,SAAS,EAAEH,OAAO,CAACH,YANrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF,EAsBGM,OAAO,iBAAI,QAAC,gBAAD;AAAkB,QAAA,SAAS,EAAEH,OAAO,CAACF;AAArC;AAAA;AAAA;AAAA;AAAA,cAtBd,EAuBGO,KAAK,iBACJ,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA,+BACE,QAAC,UAAD;AAAY,UAAA,KAAK,EAAC,OAAlB;AAAA,oBAA2BA;AAA3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAxBJ,eA4BE,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAC,UAAxB;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,QAAT;AAAkB,YAAA,OAAO,EAAC,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cA5BF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2CD,CAvDD;;GAAMN,a;UACYjB,S;;;KADZiB,a;AAyDN,eAAeA,aAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from '@mui/material/styles';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    height: '100vh',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n  },\n  logo: {\n    marginBottom: theme.spacing(4),\n  },\n  form: {\n    margin: '0 auto',\n    maxWidth: '400px',\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  submitButton: {\n    margin: theme.spacing(2, 0),\n  },\n  progress: {\n    margin: theme.spacing(2, 0),\n  },\n}));\n\nconst ResetPassword = () => {\n  const classes = useStyles();\n  const [email, setEmail] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setLoading(true);\n    // Add code to handle reset password request here\n  };\n\n  return (\n    <Container maxWidth=\"sm\" className={classes.container}>\n      <Typography variant=\"h3\" className={classes.logo} align=\"center\">\n        Logo\n      </Typography>\n      <form className={classes.form} onSubmit={handleSubmit}>\n        <TextField\n          label=\"Email\"\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          type=\"email\"\n          autoFocus\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n        />\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n          fullWidth\n          disabled={loading}\n          className={classes.submitButton}\n        >\n          Reset Password\n        </Button>\n        {loading && <CircularProgress className={classes.progress} />}\n        {error && (\n          <Box mt={2}>\n            <Typography color=\"error\">{error}</Typography>\n          </Box>\n        )}\n        <Grid container justify=\"flex-end\">\n          <Grid item>\n            <Link to=\"/login\" variant=\"body2\">\n              Return to login\n            </Link>\n          </Grid>\n        </Grid>\n      </form>\n    </Container>\n  );\n};\n\nexport default ResetPassword;\n"]},"metadata":{},"sourceType":"module"}