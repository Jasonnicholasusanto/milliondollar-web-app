{"ast":null,"code":"var _jsxFileName = \"/Users/Jason/Desktop/Folders/milliondollar-web-app/client/src/pages/ResetPassword/ResetPassword.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Container, Box, TextField, Button, Typography } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ResetPassword = () => {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const handleSubmit = event => {\n    event.preventDefault(); // Add logic to submit form data to server and handle response\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      flexGrow: 1\n    },\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"sm\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          height: \"100vh\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          gutterBottom: true,\n          children: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          color: \"error\",\n          gutterBottom: true,\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          component: \"form\",\n          onSubmit: handleSubmit,\n          sx: {\n            \"& .MuiTextField-root\": {\n              m: 1,\n              width: \"25ch\"\n            }\n          },\n          noValidate: true,\n          autoComplete: \"off\",\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            id: \"email\",\n            label: \"Email\",\n            type: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            id: \"password\",\n            label: \"Password\",\n            type: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            id: \"confirm-password\",\n            label: \"Confirm Password\",\n            type: \"password\",\n            value: confirmPassword,\n            onChange: e => setConfirmPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            type: \"submit\",\n            children: \"Reset Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ResetPassword, \"Km21cqbBuCgLw0eInTKwcP7TYQA=\");\n\n_c = ResetPassword;\nexport default ResetPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"sources":["/Users/Jason/Desktop/Folders/milliondollar-web-app/client/src/pages/ResetPassword/ResetPassword.jsx"],"names":["useState","Container","Box","TextField","Button","Typography","ResetPassword","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","error","setError","handleSubmit","event","preventDefault","flexGrow","display","flexDirection","alignItems","justifyContent","height","m","width","e","target","value"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { Container, Box, TextField, Button, Typography } from \"@mui/material\";\n\nconst ResetPassword = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    // Add logic to submit form data to server and handle response\n  };\n\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <Container maxWidth=\"sm\">\n        <Box\n          sx={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            height: \"100vh\",\n          }}\n        >\n          <Typography variant=\"h4\" gutterBottom>\n            Reset Password\n          </Typography>\n          {error && (\n            <Typography variant=\"body1\" color=\"error\" gutterBottom>\n              {error}\n            </Typography>\n          )}\n          <Box\n            component=\"form\"\n            onSubmit={handleSubmit}\n            sx={{\n              \"& .MuiTextField-root\": { m: 1, width: \"25ch\" },\n            }}\n            noValidate\n            autoComplete=\"off\"\n          >\n            <TextField\n              required\n              id=\"email\"\n              label=\"Email\"\n              type=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            <TextField\n              required\n              id=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <TextField\n              required\n              id=\"confirm-password\"\n              label=\"Confirm Password\"\n              type=\"password\"\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n            />\n            <Button variant=\"contained\" type=\"submit\">\n              Reset Password\n            </Button>\n          </Box>\n        </Box>\n      </Container>\n    </Box>\n  );\n};\n\nexport default ResetPassword;\n"]},"metadata":{},"sourceType":"module"}