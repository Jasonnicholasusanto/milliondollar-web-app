{"ast":null,"code":"var _jsxFileName = \"/Users/Jason/Desktop/Folders/milliondollar-web-app/client/src/components/PosterMaterials/PosterMaterials.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './PosterMaterials.scss';\nimport useFetch from '../../hooks/useFetch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PosterMaterials = () => {\n  _s();\n\n  const [selectedPosterMaterials, setSelectedPosterMaterials] = useState([]);\n  const {\n    data,\n    loading,\n    error\n  } = useFetch(`/poster-materials?populate*=&`);\n\n  const handleChange = e => {\n    const value = e.target.value;\n    const isChecked = e.target.checked;\n    setSelectedPosterMaterials(isChecked ? [...selectedPosterMaterials, value] : selectedPosterMaterials.filter(item => item !== value));\n    console.log(selectedPosterMaterials);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"posterMaterials\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Poster Materials\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), data === null || data === void 0 ? void 0 : data.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputItem\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        id: item.id,\n        value: item.id,\n        onChange: e => handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: item.id,\n        children: item.attributes.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, item.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PosterMaterials, \"DDSd4ntCcbxmn/eC6tdkgL4TyTk=\", false, function () {\n  return [useFetch];\n});\n\n_c = PosterMaterials;\nexport default PosterMaterials;\n\nvar _c;\n\n$RefreshReg$(_c, \"PosterMaterials\");","map":{"version":3,"sources":["/Users/Jason/Desktop/Folders/milliondollar-web-app/client/src/components/PosterMaterials/PosterMaterials.jsx"],"names":["React","useState","useFetch","PosterMaterials","selectedPosterMaterials","setSelectedPosterMaterials","data","loading","error","handleChange","e","value","target","isChecked","checked","filter","item","console","log","map","id","attributes","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,wBAAP;AACA,OAAOC,QAAP,MAAqB,sBAArB;;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAE1B,QAAM,CAACC,uBAAD,EAA0BC,0BAA1B,IAAwDJ,QAAQ,CAAC,EAAD,CAAtE;AAEA,QAAM;AAAEK,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BN,QAAQ,CACpC,+BADoC,CAAzC;;AAIA,QAAMO,YAAY,GAAIC,CAAD,IAAO;AACxB,UAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAAvB;AACA,UAAME,SAAS,GAAGH,CAAC,CAACE,MAAF,CAASE,OAA3B;AAEAT,IAAAA,0BAA0B,CACtBQ,SAAS,GACP,CAAC,GAAGT,uBAAJ,EAA6BO,KAA7B,CADO,GAEPP,uBAAuB,CAACW,MAAxB,CAA+BC,IAAI,IAAIA,IAAI,KAAKL,KAAhD,CAHoB,CAA1B;AAKAM,IAAAA,OAAO,CAACC,GAAR,CAAYd,uBAAZ;AACH,GAVD;;AAYF,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAGKE,IAHL,aAGKA,IAHL,uBAGKA,IAAI,CAAEa,GAAN,CAAWH,IAAD,iBACP;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,EAAE,EAAEA,IAAI,CAACI,EAAhC;AAAoC,QAAA,KAAK,EAAEJ,IAAI,CAACI,EAAhD;AAAoD,QAAA,QAAQ,EAAGV,CAAD,IAAOD;AAArE;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,OAAO,EAAEO,IAAI,CAACI,EAArB;AAAA,kBAA0BJ,IAAI,CAACK,UAAL,CAAgBC;AAA1C;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA,OAAgCN,IAAI,CAACI,EAArC;AAAA;AAAA;AAAA;AAAA,YADH,CAHL;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAhCD;;GAAMjB,e;UAI+BD,Q;;;KAJ/BC,e;AAkCN,eAAeA,eAAf","sourcesContent":["import React, { useState } from 'react';\nimport './PosterMaterials.scss';\nimport useFetch from '../../hooks/useFetch';\n\nconst PosterMaterials = () => {\n\n    const [selectedPosterMaterials, setSelectedPosterMaterials] = useState([]);\n\n    const { data, loading, error } = useFetch(\n        `/poster-materials?populate*=&`\n      );\n\n    const handleChange = (e) => {\n        const value = e.target.value;\n        const isChecked = e.target.checked;\n\n        setSelectedPosterMaterials(\n            isChecked \n            ? [...selectedPosterMaterials, value] \n            : selectedPosterMaterials.filter(item => item !== value)\n        );\n        console.log(selectedPosterMaterials);\n    }\n\n  return (\n    <div className=\"posterMaterials\">\n        <h2>Poster Materials</h2>\n\n        {data?.map((item) => (\n            <div className=\"inputItem\" key={item.id}>\n                <input type=\"checkbox\" id={item.id} value={item.id} onChange={(e) => handleChange}/>\n                <label htmlFor={item.id}>{item.attributes.title}</label>\n            </div>\n        ))}\n    </div>\n  )\n}\n\nexport default PosterMaterials"]},"metadata":{},"sourceType":"module"}