{"ast":null,"code":"var _jsxFileName = \"/Users/Jason/Desktop/Folders/milliondollar-web-app/client/src/pages/Login/Login.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './Login.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const response = await fetch(\"/auth/local\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        identifier: email,\n        password\n      })\n    });\n    const data = await response.json();\n    console.log(data);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 7\n  }, this);\n};\n_s(Login, \"3B3pqDcVnkT+z/sPK6Z9zQsLP+s=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Login","_s","email","setEmail","useState","password","setPassword","handleSubmit","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","identifier","data","json","console","log","onSubmit","children","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Jason/Desktop/Folders/milliondollar-web-app/client/src/pages/Login/Login.jsx"],"sourcesContent":["import React from 'react';\nimport './Login.scss';\n\nconst Login = () => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n  \n    const handleSubmit = async (event) => {\n      event.preventDefault();\n  \n      const response = await fetch(\"/auth/local\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          identifier: email,\n          password,\n        }),\n      });\n  \n      const data = await response.json();\n      console.log(data);\n    };\n  \n    return (\n      <form onSubmit={handleSubmit}>\n        <label>\n          Email:\n          <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\n        </label>\n        <label>\n          Password:\n          <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n        </label>\n        <button type=\"submit\">Log In</button>\n      </form>\n    );\n  \n}\n\nexport default Login"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGF,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMG,YAAY,GAAG,MAAOC,KAAK,IAAK;IACpCA,KAAK,CAACC,cAAc,EAAE;IAEtB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAa,EAAE;MAC1CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,UAAU,EAAEf,KAAK;QACjBG;MACF,CAAC;IACH,CAAC,CAAC;IAEF,MAAMa,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,EAAE;IAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;EACnB,CAAC;EAED,oBACEnB,OAAA;IAAMuB,QAAQ,EAAEf,YAAa;IAAAgB,QAAA,gBAC3BxB,OAAA;MAAAwB,QAAA,GAAO,QAEL,eAAAxB,OAAA;QAAOyB,IAAI,EAAC,OAAO;QAACC,KAAK,EAAEvB,KAAM;QAACwB,QAAQ,EAAGC,CAAC,IAAKxB,QAAQ,CAACwB,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACzE,eACRjC,OAAA;MAAAwB,QAAA,GAAO,WAEL,eAAAxB,OAAA;QAAOyB,IAAI,EAAC,UAAU;QAACC,KAAK,EAAEpB,QAAS;QAACqB,QAAQ,EAAGC,CAAC,IAAKrB,WAAW,CAACqB,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAClF,eACRjC,OAAA;MAAQyB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAM;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAChC;AAGb,CAAC;AAAA/B,EAAA,CApCKD,KAAK;AAAAiC,EAAA,GAALjC,KAAK;AAsCX,eAAeA,KAAK;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}