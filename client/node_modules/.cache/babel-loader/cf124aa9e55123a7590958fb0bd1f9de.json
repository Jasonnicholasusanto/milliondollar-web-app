{"ast":null,"code":"import axios from \"axios\";\nimport { hash } from \"bcryptjs\";\nexport const postSignup = async (firstName, lastName, username, email, hashedPassword, updates) => {\n  try {\n    const response = await axios.post(process.env.REACT_APP_API_URL + \"/users\", {\n      data: {\n        firstName: firstName,\n        lastName: lastName,\n        username: username,\n        email: email,\n        password: hashedPassword,\n        updates: updates === \"yes\" ? true : false,\n        blocked: false,\n        confirmed: false,\n        role: {\n          name: 'Public'\n        }\n      }\n    }, {\n      baseURL: process.env.REACT_APP_API_URL,\n      headers: {\n        Authorization: \"bearer \" + process.env.REACT_APP_API_TOKEN\n      }\n    });\n    console.log(response.data);\n  } catch (error) {\n    console.error(error);\n  }\n};","map":{"version":3,"sources":["/Users/Jason/Desktop/Folders/milliondollar-web-app/client/src/hooks/postSignup.js"],"names":["axios","hash","postSignup","firstName","lastName","username","email","hashedPassword","updates","response","post","process","env","REACT_APP_API_URL","data","password","blocked","confirmed","role","name","baseURL","headers","Authorization","REACT_APP_API_TOKEN","console","log","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,UAArB;AAEA,OAAO,MAAMC,UAAU,GAAG,OAAOC,SAAP,EAAkBC,QAAlB,EAA4BC,QAA5B,EAAsCC,KAAtC,EAA6CC,cAA7C,EAA6DC,OAA7D,KAAyE;AAC/F,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAN,CACrBC,OAAO,CAACC,GAAR,CAAYC,iBAAZ,GAAgC,QADX,EAErB;AACEC,MAAAA,IAAI,EAAE;AACJX,QAAAA,SAAS,EAAEA,SADP;AAEJC,QAAAA,QAAQ,EAAEA,QAFN;AAGJC,QAAAA,QAAQ,EAAEA,QAHN;AAIJC,QAAAA,KAAK,EAAEA,KAJH;AAKJS,QAAAA,QAAQ,EAAER,cALN;AAMJC,QAAAA,OAAO,EAAEA,OAAO,KAAG,KAAV,GAAkB,IAAlB,GAAyB,KAN9B;AAOJQ,QAAAA,OAAO,EAAE,KAPL;AAQJC,QAAAA,SAAS,EAAE,KARP;AASJC,QAAAA,IAAI,EAAE;AACFC,UAAAA,IAAI,EAAE;AADJ;AATF;AADR,KAFqB,EAiBrB;AACEC,MAAAA,OAAO,EAAET,OAAO,CAACC,GAAR,CAAYC,iBADvB;AAEEQ,MAAAA,OAAO,EAAE;AACLC,QAAAA,aAAa,EAAE,YAAYX,OAAO,CAACC,GAAR,CAAYW;AADlC;AAFX,KAjBqB,CAAvB;AAuBAC,IAAAA,OAAO,CAACC,GAAR,CAAYhB,QAAQ,CAACK,IAArB;AACD,GAzBD,CAyBE,OAAOY,KAAP,EAAc;AACdF,IAAAA,OAAO,CAACE,KAAR,CAAcA,KAAd;AACD;AACF,CA7BI","sourcesContent":["import axios from \"axios\";\nimport { hash } from \"bcryptjs\";\n\nexport const postSignup = async (firstName, lastName, username, email, hashedPassword, updates) => {\n    try {\n      const response = await axios.post(\n        process.env.REACT_APP_API_URL + \"/users\", \n        {\n          data: {\n            firstName: firstName,\n            lastName: lastName,\n            username: username,\n            email: email,\n            password: hashedPassword,\n            updates: updates===\"yes\" ? true : false,\n            blocked: false,\n            confirmed: false,\n            role: {\n                name: 'Public'\n            }\n          }\n        },\n        {\n          baseURL: process.env.REACT_APP_API_URL,\n          headers: {\n              Authorization: \"bearer \" + process.env.REACT_APP_API_TOKEN,\n          },\n        });\n      console.log(response.data);\n    } catch (error) {\n      console.error(error);\n    }\n  };"]},"metadata":{},"sourceType":"module"}