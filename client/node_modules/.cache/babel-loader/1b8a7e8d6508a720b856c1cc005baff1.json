{"ast":null,"code":"var _jsxFileName = \"/Users/Jason/Desktop/Folders/milliondollar-web-app/client/src/pages/Login/Signup.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Link from '@mui/material/Link';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport Contact from '../../components/Contact/Contact';\nimport './Signup.scss';\nimport bcrypt from 'bcryptjs';\nimport { postSignup } from '../../hooks/postSignup.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Copyright(props) {\n  return /*#__PURE__*/_jsxDEV(Typography, {\n    variant: \"body2\",\n    color: \"text.secondary\",\n    align: \"center\",\n    ...props,\n    children: ['Copyright Â© ', /*#__PURE__*/_jsxDEV(Link, {\n      color: \"inherit\",\n      href: \"https://mui.com/\",\n      children: \"MillionDollarPosters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), ' ', \"2023\", '.']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Copyright;\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#000000',\n      darker: '#000000'\n    },\n    secondary: {\n      main: '#ffffff'\n    }\n  }\n});\nexport default function SignUp() {\n  _s();\n\n  // const { data, loading, error } = useFetchUsers(\n  //   \"/users?populate=*\"\n  // );\n  // console.log(data);\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [updates, setUpdates] = useState(false);\n  const [password, setPassword] = useState('');\n  const [submitted, setSubmitted] = useState(false);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    const saltRounds = 10;\n    const password = data.get('password');\n    const hashedPassword = bcrypt.hashSync(password, saltRounds);\n    let consent = '';\n\n    if (updates) {\n      consent = 'yes';\n    } else {\n      consent = 'no';\n    }\n\n    await postSignup(firstName, lastName, username, email, password, consent);\n    setFirstName('');\n    setLastName('');\n    setUsername('');\n    setEmail('');\n    setPassword('');\n    setSubmitted(true);\n  }; // Before posting the username to the back-end, we must also check if the username is available.\n  // After a user signs up, we must verify their email address.\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loginContainer\",\n    children: [/*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        component: \"main\",\n        sx: {\n          height: '100vh'\n        },\n        children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: false,\n          sm: 4,\n          md: 7,\n          sx: {\n            backgroundImage: 'url(https://source.unsplash.com/random)',\n            backgroundRepeat: 'no-repeat',\n            backgroundColor: t => t.palette.mode === 'light' ? t.palette.grey[50] : t.palette.grey[900],\n            backgroundSize: 'cover',\n            backgroundPosition: 'center'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 8,\n          md: 5,\n          component: Paper,\n          elevation: 6,\n          square: true,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              my: 8,\n              mx: 4,\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"$M\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              component: \"h1\",\n              variant: \"h5\",\n              children: \"Sign up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this), submitted && /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontSize: \"10px\"\n              },\n              children: \"Thank you for joining us! Please verify your email.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              component: \"form\",\n              noValidate: true,\n              onSubmit: handleSubmit,\n              sx: {\n                mt: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 2,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 6,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    margin: \"normal\",\n                    autoComplete: \"given-name\",\n                    name: \"firstName\",\n                    required: true,\n                    fullWidth: true,\n                    id: \"firstName\",\n                    label: \"First Name\",\n                    autoFocus: true,\n                    value: firstName,\n                    onChange: e => setFirstName(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 134,\n                    columnNumber: 22\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 20\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 6,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    margin: \"normal\",\n                    required: true,\n                    fullWidth: true,\n                    id: \"lastName\",\n                    label: \"Last Name\",\n                    name: \"lastName\",\n                    autoComplete: \"family-name\",\n                    value: lastName,\n                    onChange: e => setLastName(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 149,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                margin: \"normal\",\n                name: \"username\",\n                required: true,\n                fullWidth: true,\n                id: \"username\",\n                label: \"Username\",\n                autoFocus: true,\n                value: username,\n                onChange: e => setUsername(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                margin: \"normal\",\n                required: true,\n                fullWidth: true,\n                id: \"email\",\n                label: \"Email Address\",\n                name: \"email\",\n                autoComplete: \"email\",\n                autoFocus: true,\n                value: email,\n                onChange: e => setEmail(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                margin: \"normal\",\n                required: true,\n                fullWidth: true,\n                name: \"password\",\n                label: \"Password\",\n                type: \"password\",\n                id: \"password\",\n                autoComplete: \"current-password\",\n                value: password,\n                onChange: e => setPassword(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                name: \"updates\",\n                id: \"updates\",\n                control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  value: \"remember\",\n                  color: \"primary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 32\n                }, this),\n                label: \"I would like to receive updates via email.\",\n                value: updates,\n                onChange: () => setUpdates(!updates)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                fullWidth: true,\n                variant: \"contained\",\n                sx: {\n                  mt: 3,\n                  mb: 2\n                },\n                color: theme.darker,\n                children: \"SIGN UP\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    href: \"/sign-in\",\n                    variant: \"body2\",\n                    children: \"Already have an account? Sign in\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 221,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Copyright, {\n                sx: {\n                  mt: 5\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Contact, {\n      className: \"contactContainer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignUp, \"6u3aHA//T3XNyCv9mjptbQsPMBQ=\");\n\n_c2 = SignUp;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Copyright\");\n$RefreshReg$(_c2, \"SignUp\");","map":{"version":3,"sources":["/Users/Jason/Desktop/Folders/milliondollar-web-app/client/src/pages/Login/Signup.jsx"],"names":["React","useState","Button","CssBaseline","TextField","FormControlLabel","Checkbox","Link","Paper","Box","Grid","Typography","createTheme","ThemeProvider","Contact","bcrypt","postSignup","Copyright","props","theme","palette","primary","main","darker","secondary","SignUp","firstName","setFirstName","lastName","setLastName","username","setUsername","email","setEmail","updates","setUpdates","password","setPassword","submitted","setSubmitted","handleSubmit","event","preventDefault","data","FormData","currentTarget","saltRounds","get","hashedPassword","hashSync","consent","height","backgroundImage","backgroundRepeat","backgroundColor","t","mode","grey","backgroundSize","backgroundPosition","my","mx","display","flexDirection","alignItems","fontSize","mt","e","target","value","mb"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Link from '@mui/material/Link';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport Contact from '../../components/Contact/Contact';\nimport './Signup.scss';\nimport bcrypt from 'bcryptjs';\nimport { postSignup } from '../../hooks/postSignup.js';\n\nfunction Copyright(props) {\n  return (\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\n      {'Copyright Â© '}\n      <Link color=\"inherit\" href=\"https://mui.com/\">\n        MillionDollarPosters\n      </Link>{' '}\n      {/* {new Date().getFullYear()} */}\n      2023\n      {'.'}\n    </Typography>\n  );\n}\n\nconst theme = createTheme({\n    palette: {\n        primary: {\n        main: '#000000',\n        darker: '#000000',\n        },\n        secondary: {\n        main: '#ffffff',\n        },\n    },\n});\n\nexport default function SignUp() {\n\n  // const { data, loading, error } = useFetchUsers(\n  //   \"/users?populate=*\"\n  // );\n\n  // console.log(data);\n\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [updates, setUpdates] = useState(false);\n  const [password, setPassword] = useState('');\n  const [submitted, setSubmitted] = useState(false);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    \n    const data = new FormData(event.currentTarget);\n\n    const saltRounds = 10;\n    const password = data.get('password');\n    const hashedPassword = bcrypt.hashSync(password, saltRounds);\n    let consent = '';\n\n    if(updates){\n      consent = 'yes';\n    } else {\n      consent = 'no';\n    }\n\n    await postSignup(firstName, lastName, username, email, password, consent);\n\n    setFirstName('');\n    setLastName('');\n    setUsername('');\n    setEmail('');\n    setPassword('');\n\n    setSubmitted(true);\n  };\n\n  // Before posting the username to the back-end, we must also check if the username is available.\n  // After a user signs up, we must verify their email address.\n\n  return (\n    <div className=\"loginContainer\">\n        <ThemeProvider theme={theme}>\n        <Grid container component=\"main\" sx={{ height: '100vh' }}>\n            <CssBaseline />\n            <Grid\n            item\n            xs={false}\n            sm={4}\n            md={7}\n            sx={{\n                backgroundImage: 'url(https://source.unsplash.com/random)',\n                backgroundRepeat: 'no-repeat',\n                backgroundColor: (t) =>\n                t.palette.mode === 'light' ? t.palette.grey[50] : t.palette.grey[900],\n                backgroundSize: 'cover',\n                backgroundPosition: 'center',\n            }}\n            />\n            <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n            <Box\n                sx={{\n                my: 8,\n                mx: 4,\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n                }}\n            >\n\n                <h1>\n                    $M\n                </h1>\n\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign up\n                </Typography>\n                \n                <br/>\n                {submitted && <p style={{fontSize: \"10px\"}}>Thank you for joining us! Please verify your email.</p>}\n\n                <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 1 }}>\n                <Grid container spacing={2}>\n                   <Grid item xs={12} sm={6}>\n                     <TextField\n                      margin=\"normal\"\n                      autoComplete=\"given-name\"\n                      name=\"firstName\"\n                      required\n                      fullWidth\n                      id=\"firstName\"\n                      label=\"First Name\"\n                      autoFocus\n                      value={firstName}\n                      onChange={e => setFirstName(e.target.value)}\n                    />\n                  </Grid>\n\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      margin=\"normal\"\n                      required\n                      fullWidth\n                      id=\"lastName\"\n                      label=\"Last Name\"\n                      name=\"lastName\"\n                      autoComplete=\"family-name\"\n                      value={lastName}\n                      onChange={e => setLastName(e.target.value)}\n                    />\n                  </Grid>\n                </Grid>\n\n                  <TextField\n                      margin=\"normal\"\n                      name=\"username\"\n                      required\n                      fullWidth\n                      id=\"username\"\n                      label=\"Username\"\n                      autoFocus\n                      value={username}\n                      onChange={e => setUsername(e.target.value)}\n                    />\n\n                  <TextField\n                      margin=\"normal\"\n                      required\n                      fullWidth\n                      id=\"email\"\n                      label=\"Email Address\"\n                      name=\"email\"\n                      autoComplete=\"email\"\n                      autoFocus\n                      value={email}\n                      onChange={e => setEmail(e.target.value)}\n                  />\n\n                  <TextField\n                      margin=\"normal\"\n                      required\n                      fullWidth\n                      name=\"password\"\n                      label=\"Password\"\n                      type=\"password\"\n                      id=\"password\"\n                      autoComplete=\"current-password\"\n                      value={password}\n                      onChange={e => setPassword(e.target.value)}\n                  />\n                  <FormControlLabel\n                      name=\"updates\"\n                      id=\"updates\"\n                      control={<Checkbox value=\"remember\" color=\"primary\" />}\n                      label=\"I would like to receive updates via email.\"\n                      value={updates}\n                      onChange={() => setUpdates(!updates)}\n                  />\n\n                  <Button\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                      sx={{ mt: 3, mb: 2 }}\n                      color={theme.darker}\n                  >\n                      SIGN UP\n                  </Button>\n\n                  <Grid container>\n                      <Grid item>\n                      <Link href=\"/sign-in\" variant=\"body2\">\n                          {\"Already have an account? Sign in\"}\n                      </Link>\n                      </Grid>\n                  </Grid>\n                  <Copyright sx={{ mt: 5 }} />\n                </Box>\n            </Box>\n            </Grid>\n        </Grid>\n\n        </ThemeProvider>\n\n        <Contact className=\"contactContainer\"/>\n    </div>\n\n  );\n}"]},"metadata":{},"sourceType":"module"}